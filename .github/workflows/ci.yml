name: CI/CD Pipeline

on:
  push:
    branches: [main, test/**]
  pull_request:
    branches: [main]

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 2

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18, 20]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Type check
        run: npm run typecheck

      - name: Run unit tests
        run: npm run test

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Make E2E test script executable
        run: |
          chmod +x scripts/test-ci.sh
          git update-index --chmod=+x scripts/test-ci.sh

      - name: Run E2E tests
        run: bash ./scripts/test-ci.sh
        env:
          CI: true
          NODE_ENV: production
          FORCE_COLOR: 0
          CYPRESS_VIDEO: false
          CYPRESS_RECORD: false

  # deploy:
  #   needs: ci
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Deploy to Vercel
  #       uses: amondnet/vercel-action@v20
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #         vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
  #         vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
  #         vercel-args: '--prod'
